{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled",
      "provenance": [],
      "mount_file_id": "17DN5P6w6QZX3S1BioQif1ncd9Xf6Fl4x",
      "authorship_tag": "ABX9TyPsI7Srg9MdcTUVObze03YP",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/subhadeepCh/MCQ-Generator/blob/main/JSON_Txt_to_Csv_Converter\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KVTuiqImUUi8"
      },
      "source": [
        "import os\r\n",
        "import pandas as pd\r\n",
        "import numpy as np\r\n",
        "def txt_to_csv(path): \r\n",
        "  \"\"\"\r\n",
        "  The csv Generarted will be such:\r\n",
        "    |Questions | Correct | A | B | C | D |\r\n",
        "  0 |  myQ     |    X    | a | X | c | d |  \r\n",
        "  \"\"\"   \r\n",
        "  questions=[]\r\n",
        "  key=[]\r\n",
        "  dist1=[]\r\n",
        "  dist2=[]\r\n",
        "  dist3=[]\r\n",
        "  dist4=[]\r\n",
        "  with open(path, errors='ignore',mode=\"r\") as file1:\r\n",
        "      files = file1.readlines()\r\n",
        "      i=0\r\n",
        "      for i in range(len(files)):\r\n",
        "        if files[i][0]=='\\n':\r\n",
        "          try:\r\n",
        "            if files[i+1][3]=='#':\r\n",
        "              continue          \r\n",
        "            questions.append(files[i+1][3:len(files)-1])\r\n",
        "            key.append(files[i+2][2:len(files[i+2])-1])\r\n",
        "            if (files[i+3]!=\"\\n\"):\r\n",
        "              dist1.append(files[i+3][2:len(files[i+3])-1])\r\n",
        "            else:\r\n",
        "              dist1.append(np.nan)\r\n",
        "              dist2.append(np.nan)\r\n",
        "              dist3.append(np.nan)\r\n",
        "              dist4.append(np.nan)\r\n",
        "              continue\r\n",
        "            if (files[i+4]!=\"\\n\"):\r\n",
        "              dist2.append(files[i+4][2:len(files[i+4])-1])\r\n",
        "            else:\r\n",
        "              dist2.append(np.nan)\r\n",
        "              dist3.append(np.nan)\r\n",
        "              dist4.append(np.nan)\r\n",
        "              continue\r\n",
        "            if (files[i+5]!=\"\\n\"):\r\n",
        "              dist3.append(files[i+5][2:len(files[i+5])-1])\r\n",
        "            else:\r\n",
        "              dist3.append(np.nan)\r\n",
        "              dist4.append(np.nan)\r\n",
        "              continue\r\n",
        "            if (files[i+6]!=\"\\n\"):\r\n",
        "              dist4.append(files[i+6][2:len(files[i+6])-1])\r\n",
        "            else:\r\n",
        "              dist4.append(np.nan)\r\n",
        "          except:\r\n",
        "            pass\r\n",
        "          \r\n",
        "\r\n",
        "\r\n",
        "\r\n",
        "  bank={}\r\n",
        "  bank[\"Questions\"]=questions\r\n",
        "  bank[\"Correct\"]=key\r\n",
        "  bank[\"A\"]=dist1\r\n",
        "  bank[\"B\"]=dist2\r\n",
        "  bank[\"C\"]=dist3\r\n",
        "  bank[\"D\"]=dist4\r\n",
        "  df=pd.DataFrame(bank)\r\n",
        "  return df"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "op-tBo75VrcA"
      },
      "source": [
        "def parse_files(sourcePath='/content/drive/MyDrive/Colab Notebooks/Data_trivial/',destination='/content/drive/MyDrive/Colab Notebooks/Data_trivial_csv/'):\r\n",
        "  \"\"\"\r\n",
        "  Input SourcePath and Destination Path to trverse through the files and convert them into csv\r\n",
        "  Requirement Python 3.x , Numpy , os , Pandas\r\n",
        "  or run this in Google Colab as it is\r\n",
        "  \"\"\"\r\n",
        "  filenames=sourcePath\r\n",
        "  i=0\r\n",
        "  for files in os.listdir(filenames):\r\n",
        "    try:\r\n",
        "      path=filenames+files\r\n",
        "      data=txt_to_csv(path)\r\n",
        "      data.to_csv(destination+files+'.csv')\r\n",
        "    except:\r\n",
        "      pass"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2veJ44u9mbyJ"
      },
      "source": [
        "print(' Input SourcePath and Destination Path to trverse through the files and convert them into csv \\n\r\n",
        "  Requirement Python 3.x , Numpy , os , Pandas \\n\r\n",
        "  or run this in Google Colab as it is')\r\n",
        "parse_files(sourcePath='',destination='')"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}